name: build and test

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build-and-test:

    runs-on: ubuntu-latest

    steps:
    - run: echo "ðŸŽ‰ The job was triggered by a ${{ github.event_name }} event."
    - uses: actions/checkout@v2
    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: "3.6"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-cov numba
        pip install -r mtalg/requirements.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest mtalg/testing/ --cov-config=.coveragerc --cov=mtalg mtalg/testing/ --cov-report xml:cov.xml --junitxml=unit.xml
    - name: Override coverage source path for Sonar
      run: sed -i "s/<source>\/home\/runner\/work\/mtalg\/mtalg\/mtalg<\/source>/<source>\/github\/workspace\/mtalg<\/source>/g" /home/runner/work/mtalg/mtalg/cov.xml
    - name: Store coverage
      uses: actions/upload-artifact@v2
      with:
        name: pytest_reports
        path: |
          cov.xml
          unit.xml
          
  test-on-ubuntu-mac-and-windows:
    name: ubuntu, mac, and windows OS
    strategy:
      matrix:
        # run 2 copies of the current job in parallel and they will load balance all specs
        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
        containers: [1, 2]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        
      # because of "record" and "parallel" parameters these containers will load balance all found tests among themselves
      - name: run tests
        uses: actions/setup-python@v2
        with:
          record: true
          parallel: true
          group: Parallel 2x on ${{ matrix.os }}
          run: pytest mtalg/testing/ 
          
  sonarcloud:
    name: SonarCloud
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Get Pytest reports
        uses: actions/download-artifact@v2
        with:
          name: pytest_reports
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
